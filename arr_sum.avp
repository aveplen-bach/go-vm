/******************************************************************************
*               ______ _      _____ _   _  _   _______ _   _                  *
*               | ___ \ |    |  ___| \ | || | / /_   _| \ | |                 *
*               | |_/ / |    | |__ |  \| || |/ /  | | |  \| |                 *
*               |  __/| |    |  __|| . ` ||    \  | | | . ` |                 *
*               | |   | |____| |___| |\  || |\  \_| |_| |\  |                 *
*               \_|   \_____/\____/\_| \_/\_| \_/\___/\_| \_/                 *
*              ___  ____________  _____   __  _____ _   ____  ___             *
*             / _ \ | ___ \ ___ \/ _ \ \ / / /  ___| | | |  \/  |             *
*            / /_\ \| |_/ / |_/ / /_\ \ V /  \ `--.| | | | .  . |             *
*            |  _  ||    /|    /|  _  |\ /    `--. \ | | | |\/| |             *
*            | | | || |\ \| |\ \| | | || |   /\__/ / |_| | |  | |             *
*            \_| |_/\_| \_\_| \_\_| |_/\_/   \____/ \___/\_|  |_/             *
*     _____ _   _____  ________        _____ _____        _____  _____        *
*    |_   _| | / /|  \/  |  _  |      |  _  |  ___|      / __  \/ __  \       *
*      | | | |/ / | .  . | | | |______| |/' |___ \ ______`' / /'`' / /'       *
*      | | |    \ | |\/| | | | |______|  /| |   \ \______| / /    / /         *
*     _| |_| |\  \| |  | \ \_/ /      \ |_/ /\__/ /      ./ /___./ /___       *
*     \___/\_| \_/\_|  |_/\___/        \___/\____/       \_____/\_____/       *
******************************************************************************/


/* 0x01 */   push                 // load array length from memory 0x00
/* 0x02 */   0                    //
/* 0x03 */   load                 //
/* 0x04 */   dup                  //
                                  //
/* 0x05 */   push                 // if len(arr) == 0 then goto end, nothing to do
/* 0x06 */   &final_routine       //
/* 0x07 */   swap                 //
/* 0x08 */   jz                   //
                                  //
/* 0x09 */   stc                  // move array length from stack top to counter reg
                                  //
                                  //
//  +--------------------------------- labels also take space in memory (to use them as variables)
//  |                             //
//  V                             //
/* 0x10 */   while_1:             //
/* 0x11 */   cts                  //
/* 0x12 */   load                 //
/* 0x13 */   cdec                 //
/* 0x14 */   cts                  //
/* 0x15 */   push                 //
/* 0x16 */   &sum_routine         // when counter == 0, goto sum_routine
/* 0x17 */   swap                 //
/* 0x18 */   jz                   //
/* 0x19 */   push                 //
/* 0x20 */   &while_1             //
/* 0x21 */   jmp                  //
                                  //
                                  //
/* 0x22 */   sum_routine:         // sum values stored on a stack
/* 0x23 */   push                 //
/* 0x24 */   0                    //
/* 0x25 */   load                 //
/* 0x26 */   stc                  //
                                  //
/* 0x27 */   cdec                 // amount of operations = len(arr)-1
                                  //
                                  //
/* 0x28 */   while_2:             // while counter != 0
/* 0x29 */   cts                  //
/* 0x30 */   push                 //
/* 0x31 */   &final_routine       // when counter == 0, goto final_routine
/* 0x32 */   swap                 //
/* 0x33 */   jz                   //
                                  //
/* 0x34 */   add                  //
/* 0x35 */   cdec                 //
/* 0x36 */   push                 //
/* 0x37 */   &while_2             //
/* 0x38 */   jmp                  //
                                  //
                                  //
/* 0x39 */   final_routine:       // store result in memory 0x00
/* 0x40 */   outnum               //
/* 0x41 */   term                 //